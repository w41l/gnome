#!/bin/sh

# Slackware build script for gnome3

# Copyright 2015, 2016  Widya Walesa <walecha99@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. FURTHERMORE I AM NOT LIABLE IF
# YOUR DATA IS DESTROYED, YOUR HOUSE BURNS DOWN OR YOUR DOG RUNS OFF.

WRK=/tmp/wlsbuild
OUTPUT=${OUTPUT:-/tmp}
GNOMEROOT=$(pwd)
NUMCPU=$(cat /proc/cpuinfo | grep "processor" | tail -n1 | awk '{print $3}')
export MAKEFLAGS="-j${NUMCPU}"

# To always upgrade package, use
#UPGRADE_PACKAGES="always"
UPGRADE_PACKAGES=${UPGRADE_PACKAGES:-"yes"}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -pipe -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -pipe -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -m64 -pipe -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

_failed()
{
  echo "ERROR: $PRGNAM-$VERSION" > $WRK/$PRGNAM.failed
  echo ""
  echo "==> Failed on $MODULES/$PRGNAM"
  echo ""
  read -t 3
  exit 1
}

_check_md5sum()
{
  eval `cat $PRGNAM.info | grep "MD5SUM="`
  echo "Checking $PRGSRC using MD5: $MD5SUM"
  MD5SRC=`echo "$MD5SUM $PRGSRC" | md5sum -c | awk '{print $2}'`
  if [ ! "$MD5SRC" = "OK" ]; then
    trap '_failed' ERR;
    echo "ERROR: checksum mismatch for tarball $PRGSRC";
    exit 1;
  fi
}

_download_src()
{
  eval `cat $PRGNAM.info | grep "DOWNLOAD="`
  echo "Downloading $PRGSRC: $DOWNLOAD"
  rm -f $PRGSRC
  trap '_failed' ERR;
  curl -#OLJ -C - "$DOWNLOAD";
}

_build()
{
  # Clearing environment
  unset VERSION BUILD TAG MD5SUM MD5SRC SRCNAM PRGSRC DOWNLOAD;
  # Create package build state
  mkdir -p $WRK $OUTPUT;
  rm -f $WRK/${PRGNAM}.failed;
  # Build the package
  cd $GNOMEROOT/$MODULES/$PRGNAM;
  eval $(cat $PRGNAM.info)
  if grep -q "SRCNAM" $PRGNAM.SlackBuild 2>/dev/null; then
    eval $(cat $PRGNAM.SlackBuild | grep "SRCNAM=")
    export PRGSRC="$(ls $SRCNAM-$VERSION.*)"
  else
    export PRGSRC=$(basename $DOWNLOAD)
  fi
  if [ -e $PRGSRC ]; then
    _check_md5sum;  
  else
    echo "$PRGSRC is not available"
    _download_src;
  fi
  echo "Building $PRGNAM using $PRGSRC"
  trap '_failed' ERR;
  . ./${PRGNAM}.SlackBuild;
}

_install() {
  if [ -f $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz ]; then
    # Installing the package
    if [ "$UPGRADE_PACKAGES" = "yes" ]; then
      trap '_failed' ERR;
      upgradepkg --install-new $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
    elif [ "$UPGRADE_PACKAGES" = "always" ]; then
      trap '_failed' ERR;
      upgradepkg --install-new --reinstall $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
    else
      echo "PACKAGE: $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz"
    fi;
  fi
}

_postbuild() {
  # Clearing environment
  unset ARCH VERSION BUILD TAG PRGNAM;
  # Update libraries links
  /sbin/ldconfig;
  # Back to SlackBuild ROOT directory
  cd $GNOMEROOT;
  pwd;
}

if [ ! -z "$1" ]; then
  echo "$1" | sed 's/,/ /g' > /tmp/GNOME_MODULES.txt
  for MODULES in `cat /tmp/GNOME_MODULES.txt`; do
    if [ ! -z "$2" ]; then
      echo "$2" | sed 's/:/ /g' > /tmp/GNOME_PACKAGES.txt
    elif [ -z "$2" ] && [ -e $GNOMEROOT/$MODULES/$MODULES.list ]; then
      cat $GNOMEROOT/$MODULES/$MODULES.list | sed '/#/d' >/tmp/GNOME_PACKAGES.txt
    elif [ -z "$2" ] && [ ! -e $GNOMEROOT/$MODULES/$MODULES.list ]; then
      cat $GNOMEROOT/$MODULES/$MODULES.default | sed '/#/d' >/tmp/GNOME_PACKAGES.txt
    fi
    for PRGNAM in `cat /tmp/GNOME_PACKAGES.txt`; do
      echo "Building: $MODULES/$PRGNAM";
      _build;
      _install;
      _postbuild;
    done
    rm -f /tmp/GNOME_PACKAGES.txt
  done
  rm -f /tmp/GNOME_MODULES.txt
else
  for MODULES in deps base flashback apps extra; do
    if [ ! -z "$2" ]; then
      echo "$2" | sed 's/:/ /g' > /tmp/GNOME_PACKAGES.txt
    elif [ -z "$2" ] && [ -f $GNOMEROOT/$MODULES/$MODULES.list ]; then
      cat $GNOMEROOT/$MODULES/$MODULES.list | sed '/#/d' >/tmp/GNOME_PACKAGES.txt
    elif [ -z "$2" ] && [ ! -f $GNOMEROOT/$MODULES/$MODULES.list ]; then
      cat $GNOMEROOT/$MODULES/$MODULES.default | sed '/#/d' >/tmp/GNOME_PACKAGES.txt
    fi
    for PRGNAM in `cat /tmp/GNOME_PACKAGES.txt`; do
      echo "Building: $MODULES/$PRGNAM";
      _build;
      _install;
      _postbuild;
    done
    rm -f /tmp/GNOME_PACKAGES.txt
  done
fi

# Clearing environment
unset WRK OUTPUT GNOMEROOT UPGRADE_PACKAGES MODULES PRGSRC PRGNAM SRCNAM ARCH VERSION BUILD TAG MD5SUM DOWNLOAD MAKEFLAGS
