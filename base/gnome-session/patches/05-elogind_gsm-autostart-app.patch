--- ./gnome-session/gsm-autostart-app.c.orig	2017-04-30 02:02:16.151664383 +0700
+++ ./gnome-session/gsm-autostart-app.c	2017-04-30 02:12:58.978699351 +0700
@@ -33,8 +33,7 @@
 #endif
 
 #ifdef HAVE_SYSTEMD
-#include <systemd/sd-journal.h>
-#include <systemd/sd-daemon.h>
+#include <elogind/sd-login.h>
 #endif
 
 #include "gsm-autostart-app.h"
@@ -1021,34 +1020,6 @@
         app->priv->startup_id = sn_id;
 }
 
-#ifdef HAVE_SYSTEMD
-static void
-on_child_setup (GsmAutostartApp *app)
-{
-        int standard_output, standard_error;
-
-        /* The FALSE means programs aren't expected to prefix each
-         * line with <n> prefix to specify priority.
-         */
-        standard_output = sd_journal_stream_fd (app->priv->desktop_id,
-                                                LOG_INFO,
-                                                FALSE);
-        standard_error = sd_journal_stream_fd (app->priv->desktop_id,
-                                               LOG_WARNING,
-                                               FALSE);
-
-        if (standard_output >= 0) {
-                dup2 (standard_output, STDOUT_FILENO);
-                close (standard_output);
-        }
-
-        if (standard_error >= 0) {
-                dup2 (standard_error, STDERR_FILENO);
-                close (standard_error);
-        }
-}
-#endif
-
 static gboolean
 autostart_app_start_spawn (GsmAutostartApp *app,
                            GError         **error)
@@ -1092,13 +1063,6 @@
                 g_app_launch_context_setenv (ctx, "DESKTOP_AUTOSTART_ID", startup_id);
         }
 
-#ifdef HAVE_SYSTEMD
-        if (sd_booted () > 0) {
-                child_setup_func = (GSpawnChildSetupFunc) on_child_setup;
-                child_setup_data = app;
-        }
-#endif
-
         handler = g_signal_connect (ctx, "launched", G_CALLBACK (app_launched), app);
         success = g_desktop_app_info_launch_uris_as_manager (app->priv->app_info,
                                                              NULL,
